version: '2.4'

services:

  php:
    image: seanmorris/ksqlc-test:${tag:-latest}-${PHP_VERSION}
    restart: on-failure
    volumes: ['../:/app']
    build:
      context: ../
      dockerfile: test/Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
    depends_on:
      - ksql-server
      - krest-server

  kafka:
    image: bitnami/kafka:2
    restart: always
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:3
    restart: always
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    restart: always
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
    depends_on:
    - kafka
    - zookeeper

  ksql-server:
    image: confluentinc/ksqldb-server:latest
    restart: always
    environment:
      KSQL_KSQL_STREAMS_COMMIT_INTERVAL_MS: 250
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on:
      - schema-registry

  krest-server:
    image: confluentinc/cp-kafka-rest:latest
    restart: always
    ports: ['8082:8082']
    environment:
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_HOST_NAME: krest-server
    depends_on:
      - kafka
      - zookeeper
      - schema-registry
